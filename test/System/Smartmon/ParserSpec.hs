{-# OPTIONS_GHC -fno-warn-orphans #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE StandaloneDeriving #-}
{-# LANGUAGE UnicodeSyntax      #-}

module System.Smartmon.ParserSpec
  ( spec
  ) where

import           Data.Aeson.AutoType.Alternative
import           System.Smartmon.Datatypes
import           System.Smartmon.Parser
import           Test.Hspec

deriving instance Show SmartInfo

instance Show a => Show (SmartValue a) where
  show (SmartValue x) = show x
  show Unknown        = "Unknown"
  show DecodeError    = "DecodeError"

spec :: Spec
spec = do
  describe "Parsing a result of " $ do
    it "Failure." $ do
      let expected = Smart {topLevelSerialNumber = Nothing, topLevelPowerCycleCount = Nothing, topLevelVendor = Nothing, topLevelFirmwareVersion = Nothing, topLevelLocalTime = Nothing, topLevelModelName = Nothing, topLevelLogicalBlockSize = Nothing, topLevelDeviceType = Nothing, topLevelSataVersion = Nothing, topLevelSmartStatus = Nothing, topLevelInterfaceSpeed = Nothing, topLevelAtaSmartData = Nothing, topLevelDevice = Nothing, topLevelPowerOnTime = Nothing, topLevelAtaSmartSelfTestLog = Nothing, topLevelAtaSctCapabilities = Nothing, topLevelAtaSmartSelectiveSelfTestLog = Nothing, topLevelAtaSmartErrorLog = Nothing, topLevelAtaVersion = Nothing, topLevelRotationRate = Nothing, topLevelPhysicalBlockSize = Nothing, topLevelJsonFormatVersion = [1.0,0.0], topLevelTemperature = Nothing, topLevelScsiVersion = Nothing, topLevelUserCapacity = Nothing, topLevelAtaSmartAttributes = Nothing, topLevelSmartctl = Smartctl {smartctlBuildInfo = "(sf-7.0-1)", smartctlSvnRevision = "4883", smartctlVersion = [7.0,0.0], smartctlArgv = ["smartctl","--all","-j","/dev/sda"], smartctlMessages = Just [MessagesElt {messagesEltString = "Smartctl open device: /dev/sda failed: \\\\.\\PhysicalDrive0: Open failed, Error=5", messagesEltSeverity = "error"}], smartctlExitStatus = 2.0, smartctlPlatformInfo = "x86_64-w64-mingw32-win7-sp1"}, topLevelInSmartctlDatabase = Nothing, topLevelProduct = Nothing, topLevelRevision = Nothing, topLevelModelFamily = Nothing, topLevelWwn = Nothing}
      result <- parseFile "samples/smartInfo_fail-1.json"
      result `shouldBe` (Just expected)

    it "RAID array." $ do
      let expected = Smart {topLevelSerialNumber = Just (AltLeft "Volume1"), topLevelPowerCycleCount = Nothing, topLevelVendor = Just (AltLeft "Intel"), topLevelFirmwareVersion = Nothing, topLevelLocalTime = Just (AltLeft (LocalTime {localTimeTimeT = 1.570609867e9, localTimeAsctime = "Wed Oct 09 10:31:07 2019 RDT"})), topLevelModelName = Just (AltLeft "Intel Raid 1 Volume"), topLevelLogicalBlockSize = Just (AltLeft 512.0), topLevelDeviceType = Just (AltLeft (DeviceType {deviceTypeName = "disk", deviceTypeScsiValue = 0.0})), topLevelSataVersion = Nothing, topLevelSmartStatus = Nothing, topLevelInterfaceSpeed = Nothing, topLevelAtaSmartData = Nothing, topLevelDevice = Just (AltLeft (Device {deviceProtocol = "SCSI", deviceName = "/dev/sdb", deviceType = "scsi", deviceInfoName = "/dev/sdb"})), topLevelPowerOnTime = Nothing, topLevelAtaSmartSelfTestLog = Nothing, topLevelAtaSctCapabilities = Nothing, topLevelAtaSmartSelectiveSelfTestLog = Nothing, topLevelAtaSmartErrorLog = Nothing, topLevelAtaVersion = Nothing, topLevelRotationRate = Just (AltLeft 7200.0), topLevelPhysicalBlockSize = Just (AltLeft 4096.0), topLevelJsonFormatVersion = [1.0,0.0], topLevelTemperature = Just (AltLeft (Temperature {temperatureCurrent = 0.0, temperatureDriveTrip = Just (AltLeft 0.0)})), topLevelScsiVersion = Just (AltLeft "SPC-3"), topLevelUserCapacity = Just (AltLeft (UserCapacity {userCapacityBlocks = 1.953519616e9, userCapacityBytes = 1.000202043392e12})), topLevelAtaSmartAttributes = Nothing, topLevelSmartctl = Smartctl {smartctlBuildInfo = "(sf-7.0-1)", smartctlSvnRevision = "4883", smartctlVersion = [7.0,0.0], smartctlArgv = ["smartctl","--all","-j","/dev/sdb"], smartctlMessages = Nothing, smartctlExitStatus = 4.0, smartctlPlatformInfo = "x86_64-w64-mingw32-w10-1809"}, topLevelInSmartctlDatabase = Nothing, topLevelProduct = Just (AltLeft "Raid 1 Volume"), topLevelRevision = Just (AltLeft "1.0."), topLevelModelFamily = Nothing, topLevelWwn = Nothing}
      result <- parseFile "samples/smartInfo_raid.json"
      result `shouldBe` (Just expected)

    it "Optical drive." $ do
      let expected = Smart {topLevelSerialNumber = Just (AltLeft "K1IHAOE1107"), topLevelPowerCycleCount = Nothing, topLevelVendor = Nothing, topLevelFirmwareVersion = Just (AltLeft "LI00"), topLevelLocalTime = Just (AltLeft (LocalTime {localTimeTimeT = 1.570609867e9, localTimeAsctime = "Wed Oct 09 10:31:07 2019 RDT"})), topLevelModelName = Just (AltLeft "HL-DT-ST DVDRAM GH24NSC0"), topLevelLogicalBlockSize = Nothing, topLevelDeviceType = Nothing, topLevelSataVersion = Just (AltLeft (SataVersion {sataVersionString = "SATA 3.0", sataVersionValue = 63.0})), topLevelSmartStatus = Nothing, topLevelInterfaceSpeed = Just (AltLeft (InterfaceSpeed {interfaceSpeedMax = Current {currentUnitsPerSecond = 15.0, currentBitsPerUnit = 1.0e8, currentString = "1.5 Gb/s", currentSataValue = 2.0}, interfaceSpeedCurrent = Nothing})), topLevelAtaSmartData = Nothing, topLevelDevice = Just (AltLeft (Device {deviceProtocol = "ATA", deviceName = "/dev/csmi0,1", deviceType = "ata", deviceInfoName = "/dev/csmi0,1"})), topLevelPowerOnTime = Nothing, topLevelAtaSmartSelfTestLog = Nothing, topLevelAtaSctCapabilities = Nothing, topLevelAtaSmartSelectiveSelfTestLog = Nothing, topLevelAtaSmartErrorLog = Nothing, topLevelAtaVersion = Just (AltLeft (AtaVersion {ataVersionMajorValue = 496.0, ataVersionString = "ATA8-ACS (unknown minor revision code: 0x0210)", ataVersionMinorValue = 528.0})), topLevelRotationRate = Nothing, topLevelPhysicalBlockSize = Nothing, topLevelJsonFormatVersion = [1.0,0.0], topLevelTemperature = Nothing, topLevelScsiVersion = Nothing, topLevelUserCapacity = Nothing, topLevelAtaSmartAttributes = Nothing, topLevelSmartctl = Smartctl {smartctlBuildInfo = "(sf-7.0-1)", smartctlSvnRevision = "4883", smartctlVersion = [7.0,0.0], smartctlArgv = ["smartctl","--all","-j","/dev/csmi0,1"], smartctlMessages = Nothing, smartctlExitStatus = 4.0, smartctlPlatformInfo = "x86_64-w64-mingw32-w10-1809"}, topLevelInSmartctlDatabase = Just (AltLeft False), topLevelProduct = Nothing, topLevelRevision = Nothing, topLevelModelFamily = Nothing, topLevelWwn = Just (AltLeft (Wwn {wwnOui = 5248.0, wwnId = 0.0, wwnNaa = 5.0}))}
      result <- parseFile "samples/smartInfo_optical.json"
      result `shouldBe` (Just expected)

    it "Spinning disk." $ do
      let expected = Smart {topLevelSerialNumber = Just (AltLeft "S24ZN902000L"), topLevelPowerCycleCount = Just (AltLeft 168.0), topLevelVendor = Nothing, topLevelFirmwareVersion = Just (AltLeft "EB6Q"), topLevelLocalTime = Just (AltLeft (LocalTime {localTimeTimeT = 1.564664713e9, localTimeAsctime = "Thu Aug 01 15:05:13 2019 WEDT"})), topLevelModelName = Just (AltLeft "X SSD 850 PRO 128GB"), topLevelLogicalBlockSize = Just (AltLeft 512.0), topLevelDeviceType = Nothing, topLevelSataVersion = Just (AltLeft (SataVersion {sataVersionString = "SATA 3.1", sataVersionValue = 127.0})), topLevelSmartStatus = Just (AltLeft (SmartStatus {smartStatusPassed = True})), topLevelInterfaceSpeed = Just (AltLeft (InterfaceSpeed {interfaceSpeedMax = Current {currentUnitsPerSecond = 60.0, currentBitsPerUnit = 1.0e8, currentString = "6.0 Gb/s", currentSataValue = 14.0}, interfaceSpeedCurrent = Just (AltLeft (Current {currentUnitsPerSecond = 60.0, currentBitsPerUnit = 1.0e8, currentString = "6.0 Gb/s", currentSataValue = 3.0}))})), topLevelAtaSmartData = Just (AltLeft (AtaSmartData {ataSmartDataOfflineDataCollection = OfflineDataCollection {offlineDataCollectionStatus = Status {statusString = "was never started", statusPassed = Nothing, statusValue = 0.0}, offlineDataCollectionCompletionSeconds = 0.0}, ataSmartDataSelfTest = SelfTest {selfTestStatus = Status {statusString = "completed without error", statusPassed = Just (AltLeft True), statusValue = 0.0}, selfTestPollingMinutes = PollingMinutes {pollingMinutesExtended = 68.0, pollingMinutesShort = 2.0}}, ataSmartDataCapabilities = Capabilities {capabilitiesAttributeAutosaveEnabled = True, capabilitiesSelfTestsSupported = True, capabilitiesExecOfflineImmediateSupported = True, capabilitiesConveyanceSelfTestSupported = False, capabilitiesOfflineIsAbortedUponNewCmd = False, capabilitiesErrorLoggingSupported = True, capabilitiesValues = [83.0,3.0], capabilitiesGpLoggingSupported = True, capabilitiesOfflineSurfaceScanSupported = False, capabilitiesSelectiveSelfTestSupported = True}})), topLevelDevice = Just (AltLeft (Device {deviceProtocol = "ATA", deviceName = "/dev/sda", deviceType = "ata", deviceInfoName = "/dev/sda"})), topLevelPowerOnTime = Just (AltLeft (PowerOnTime {powerOnTimeHours = 846.0})), topLevelAtaSmartSelfTestLog = Just (AltLeft (AtaSmartSelfTestLog {ataSmartSelfTestLogStandard = Standard {standardCount = 0.0, standardRevision = 1.0}})), topLevelAtaSctCapabilities = Just (AltLeft (AtaSctCapabilities {ataSctCapabilitiesErrorRecoveryControlSupported = True, ataSctCapabilitiesValue = 61.0, ataSctCapabilitiesFeatureControlSupported = True, ataSctCapabilitiesDataTableSupported = True})), topLevelAtaSmartSelectiveSelfTestLog = Just (AltLeft (AtaSmartSelectiveSelfTestLog {ataSmartSelectiveSelfTestLogFlags = Flags {flagsPrefailure = Nothing, flagsString = Nothing, flagsErrorRate = Nothing, flagsPerformance = Nothing, flagsEventCount = Nothing, flagsValue = 0.0, flagsAutoKeep = Nothing, flagsUpdatedOnline = Nothing, flagsRemainderScanEnabled = Just (AltLeft False)}, ataSmartSelectiveSelfTestLogPowerUpScanResumeMinutes = 0.0, ataSmartSelectiveSelfTestLogRevision = 1.0, ataSmartSelectiveSelfTestLogTable = [TableElt {tableEltRaw = Nothing, tableEltStatus = Just (AltLeft (Status {statusString = "Not_testing", statusPassed = Nothing, statusValue = 0.0})), tableEltFlags = Nothing, tableEltLbaMin = Just (AltLeft 0.0), tableEltWorst = Nothing, tableEltValue = Nothing, tableEltLbaMax = Just (AltLeft 0.0), tableEltName = Nothing, tableEltId = Nothing, tableEltWhenFailed = Nothing, tableEltThresh = Nothing},TableElt {tableEltRaw = Nothing, tableEltStatus = Just (AltLeft (Status {statusString = "Not_testing", statusPassed = Nothing, statusValue = 0.0})), tableEltFlags = Nothing, tableEltLbaMin = Just (AltLeft 0.0), tableEltWorst = Nothing, tableEltValue = Nothing, tableEltLbaMax = Just (AltLeft 0.0), tableEltName = Nothing, tableEltId = Nothing, tableEltWhenFailed = Nothing, tableEltThresh = Nothing},TableElt {tableEltRaw = Nothing, tableEltStatus = Just (AltLeft (Status {statusString = "Not_testing", statusPassed = Nothing, statusValue = 0.0})), tableEltFlags = Nothing, tableEltLbaMin = Just (AltLeft 0.0), tableEltWorst = Nothing, tableEltValue = Nothing, tableEltLbaMax = Just (AltLeft 0.0), tableEltName = Nothing, tableEltId = Nothing, tableEltWhenFailed = Nothing, tableEltThresh = Nothing},TableElt {tableEltRaw = Nothing, tableEltStatus = Just (AltLeft (Status {statusString = "Not_testing", statusPassed = Nothing, statusValue = 0.0})), tableEltFlags = Nothing, tableEltLbaMin = Just (AltLeft 0.0), tableEltWorst = Nothing, tableEltValue = Nothing, tableEltLbaMax = Just (AltLeft 0.0), tableEltName = Nothing, tableEltId = Nothing, tableEltWhenFailed = Nothing, tableEltThresh = Nothing},TableElt {tableEltRaw = Nothing, tableEltStatus = Just (AltLeft (Status {statusString = "Not_testing", statusPassed = Nothing, statusValue = 0.0})), tableEltFlags = Nothing, tableEltLbaMin = Just (AltLeft 0.0), tableEltWorst = Nothing, tableEltValue = Nothing, tableEltLbaMax = Just (AltLeft 0.0), tableEltName = Nothing, tableEltId = Nothing, tableEltWhenFailed = Nothing, tableEltThresh = Nothing}]})), topLevelAtaSmartErrorLog = Just (AltLeft (AtaSmartErrorLog {ataSmartErrorLogSummary = Standard {standardCount = 0.0, standardRevision = 1.0}})), topLevelAtaVersion = Just (AltLeft (AtaVersion {ataVersionMajorValue = 1020.0, ataVersionString = "ACS-2, ATA8-ACS T13/1699-D revision 4c", ataVersionMinorValue = 57.0})), topLevelRotationRate = Just (AltLeft 0.0), topLevelPhysicalBlockSize = Just (AltLeft 512.0), topLevelJsonFormatVersion = [1.0,0.0], topLevelTemperature = Just (AltLeft (Temperature {temperatureCurrent = 32.0, temperatureDriveTrip = Nothing})), topLevelScsiVersion = Nothing, topLevelUserCapacity = Just (AltLeft (UserCapacity {userCapacityBlocks = 2.5006968e8, userCapacityBytes = 1.2803567616e11})), topLevelAtaSmartAttributes = Just (AltLeft (AtaSmartAttributes {ataSmartAttributesRevision = 1.0, ataSmartAttributesTable = [TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft True), flagsString = Just (AltLeft "PO--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 51.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Reallocated_Sector_Ct"), tableEltId = Just (AltLeft 5.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 10.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "846", sataVersionValue = 846.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 99.0), tableEltValue = Just (AltLeft 99.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Power_On_Hours"), tableEltId = Just (AltLeft 9.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "168", sataVersionValue = 168.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 99.0), tableEltValue = Just (AltLeft 99.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Power_Cycle_Count"), tableEltId = Just (AltLeft 12.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "5", sataVersionValue = 5.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft True), flagsString = Just (AltLeft "PO--C- "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 19.0, flagsAutoKeep = Just (AltLeft False), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 99.0), tableEltValue = Just (AltLeft 99.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Wear_Leveling_Count"), tableEltId = Just (AltLeft 177.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft True), flagsString = Just (AltLeft "PO--C- "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 19.0, flagsAutoKeep = Just (AltLeft False), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Used_Rsvd_Blk_Cnt_Tot"), tableEltId = Just (AltLeft 179.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 10.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Program_Fail_Cnt_Total"), tableEltId = Just (AltLeft 181.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 10.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Erase_Fail_Count_Total"), tableEltId = Just (AltLeft 182.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 10.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft True), flagsString = Just (AltLeft "PO--C- "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 19.0, flagsAutoKeep = Just (AltLeft False), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Runtime_Bad_Block"), tableEltId = Just (AltLeft 183.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 10.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Uncorrectable_Error_Cnt"), tableEltId = Just (AltLeft 187.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "32", sataVersionValue = 32.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 61.0), tableEltValue = Just (AltLeft 68.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Airflow_Temperature_Cel"), tableEltId = Just (AltLeft 190.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O-RC- "), flagsErrorRate = Just (AltLeft True), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 26.0, flagsAutoKeep = Just (AltLeft False), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 200.0), tableEltValue = Just (AltLeft 200.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "ECC_Error_Rate"), tableEltId = Just (AltLeft 195.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "0", sataVersionValue = 0.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-OSRCK "), flagsErrorRate = Just (AltLeft True), flagsPerformance = Just (AltLeft True), flagsEventCount = Just (AltLeft True), flagsValue = 62.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 100.0), tableEltValue = Just (AltLeft 100.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "CRC_Error_Count"), tableEltId = Just (AltLeft 199.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "21", sataVersionValue = 21.0})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--C- "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 18.0, flagsAutoKeep = Just (AltLeft False), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 99.0), tableEltValue = Just (AltLeft 99.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "POR_Recovery_Count"), tableEltId = Just (AltLeft 235.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)},TableElt {tableEltRaw = Just (AltLeft (SataVersion {sataVersionString = "1047174917", sataVersionValue = 1.047174917e9})), tableEltStatus = Nothing, tableEltFlags = Just (AltLeft (Flags {flagsPrefailure = Just (AltLeft False), flagsString = Just (AltLeft "-O--CK "), flagsErrorRate = Just (AltLeft False), flagsPerformance = Just (AltLeft False), flagsEventCount = Just (AltLeft True), flagsValue = 50.0, flagsAutoKeep = Just (AltLeft True), flagsUpdatedOnline = Just (AltLeft True), flagsRemainderScanEnabled = Nothing})), tableEltLbaMin = Nothing, tableEltWorst = Just (AltLeft 99.0), tableEltValue = Just (AltLeft 99.0), tableEltLbaMax = Nothing, tableEltName = Just (AltLeft "Total_LBAs_Written"), tableEltId = Just (AltLeft 241.0), tableEltWhenFailed = Just (AltLeft ""), tableEltThresh = Just (AltLeft 0.0)}]})), topLevelSmartctl = Smartctl {smartctlBuildInfo = "(sf-7.0-1)", smartctlSvnRevision = "4883", smartctlVersion = [7.0,0.0], smartctlArgv = ["smartctl","--all","-j","/dev/sda"], smartctlMessages = Nothing, smartctlExitStatus = 0.0, smartctlPlatformInfo = "x86_64-w64-mingw32-win7-sp1"}, topLevelInSmartctlDatabase = Just (AltLeft True), topLevelProduct = Nothing, topLevelRevision = Nothing, topLevelModelFamily = Just (AltLeft "X based SSDs"), topLevelWwn = Just (AltLeft (Wwn {wwnOui = 9528.0, wwnId = 3.5436182597e10, wwnNaa = 5.0}))}
      result <- parseFile "samples/smartInfo_sda.json"
      result `shouldBe` (Just expected)
